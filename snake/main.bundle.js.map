{"version":3,"sources":["E:/WEBproject/ngx-snake/src/$_lazy_route_resource lazy","E:/WEBproject/ngx-snake/src/app/app.component.css","E:/WEBproject/ngx-snake/src/app/app.component.html","E:/WEBproject/ngx-snake/src/app/app.component.ts","E:/WEBproject/ngx-snake/src/app/app.constants.ts","E:/WEBproject/ngx-snake/src/app/app.module.ts","E:/WEBproject/ngx-snake/src/app/app.storage.service.ts","E:/WEBproject/ngx-snake/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/WEBproject/ngx-snake/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".game-header {\\r\\n  color: #fff;\\r\\n  padding: 5px 15px 5px 0px;\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.game-header>.score-block {\\r\\n  display: inline-block;\\r\\n}\\r\\n\\r\\n.score-block>.score {\\r\\n  position: absolute;\\r\\n  right: 8px;\\r\\n  top: -5px;\\r\\n}\\r\\n\\r\\n.score-block>.best-score {\\r\\n  position: absolute;\\r\\n  right: 8px;\\r\\n  margin-top: 5px;\\r\\n  font-size: 12px;\\r\\n}\\r\\n\\r\\n.game-header>.logo {\\r\\n  display: inline-block;\\r\\n  padding-left: 15px;\\r\\n}\\r\\n\\r\\n.game-container {\\r\\n  width: 468px;\\r\\n  position: relative;\\r\\n  display: block;\\r\\n  margin: auto;\\r\\n  background-color: #47565A;\\r\\n  box-shadow: 0 19px 38px rgba(0, 0, 0, 0.30), 0 15px 12px rgba(0, 0, 0, 0.22);\\r\\n  border-radius: 5px;\\r\\n}\\r\\n\\r\\n.row {\\r\\n  height: 26px;\\r\\n}\\r\\n\\r\\n.column {\\r\\n  border: 1px solid rgba(97, 131, 138, .1);\\r\\n  width: 24px;\\r\\n  height: 24px;\\r\\n  display: inline-block;\\r\\n}\\r\\n\\r\\n.start-button {\\r\\n  padding: 15px;\\r\\n  text-align: center;\\r\\n  background-color: #47565A;\\r\\n  color: white;\\r\\n  border-radius: 5px;\\r\\n}\\r\\n\\r\\n.start-button:hover {\\r\\n  opacity: 0.65;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.start-button.new-game-button {\\r\\n  margin: 0 105px 4px 105px;\\r\\n}\\r\\n\\r\\n.disable-clicks {\\r\\n  pointer-events: none;\\r\\n}\\r\\n\\r\\n.new-game-menu {\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  width: 100%;\\r\\n  bottom: 0;\\r\\n  padding: 40% 0;\\r\\n  text-align: center;\\r\\n  background: rgba(0, 0, 0, 0.15);\\r\\n}\\r\\n\\r\\n.new-game-menu-label {\\r\\n  font-size: 1.17em;\\r\\n  margin-bottom: 13px;\\r\\n  display: block;\\r\\n  color: #fff;\\r\\n}\\r\\n\\r\\n.new-best-score {\\r\\n  -webkit-animation: glow .5s infinite alternate;\\r\\n          animation: glow .5s infinite alternate;\\r\\n}\\r\\n\\r\\n@-webkit-keyframes glow {\\r\\n  to {\\r\\n    text-shadow: 0 0 15px #ffff00;\\r\\n  }\\r\\n}\\r\\n\\r\\n@keyframes glow {\\r\\n  to {\\r\\n    text-shadow: 0 0 15px #ffff00;\\r\\n  }\\r\\n}\\r\\n\\r\\n@media screen and (max-width: 480px) {\\r\\n  .game-container {\\r\\n    width: 100%;\\r\\n  }\\r\\n  .column {\\r\\n    width: 5.55%;\\r\\n    height: 0;\\r\\n    padding-bottom: 5.06%;\\r\\n    box-sizing: border-box;\\r\\n  }\\r\\n  .row {\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    height: 0;\\r\\n    padding-bottom: 5.5%;\\r\\n  }\\r\\n  .new-game-menu {\\r\\n    width: 100%;\\r\\n    top: 8px;\\r\\n    padding-top: 30%;\\r\\n    font-size: 80%;\\r\\n  }\\r\\n  .start-button.new-game-button {\\r\\n    margin: 0 15% 1% 15%;\\r\\n  }\\r\\n  @-moz-document url-prefix() {\\r\\n    .column {\\r\\n      min-height: 5.5vw;\\r\\n    }\\r\\n  }\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/WEBproject/ngx-snake/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"game-container\\\">\\r\\n  <div class=\\\"game-header\\\">\\r\\n    <h3 class=\\\"logo\\\">ngx-Snake</h3>\\r\\n    <div class=\\\"score-block\\\">\\r\\n      <h3 class=\\\"score\\\" [ngClass]=\\\"{'new-best-score': newBestScore}\\\">Score: {{score}}</h3>\\r\\n      <h3 class=\\\"best-score\\\" [ngClass]=\\\"{'new-best-score': newBestScore}\\\">Best Score: {{best_score}}</h3>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\" *ngFor=\\\"let column of board; let i = index;\\\">\\r\\n    <div class=\\\"column\\\" [ngStyle]=\\\"{'background-color': setColors(i, j)}\\\" *ngFor=\\\"let row of column; let j = index\\\"></div>\\r\\n  </div>\\r\\n  <div class=\\\"start-button\\\" [ngClass]=\\\"{'disable-clicks': gameStarted}\\\" (click)=\\\"showMenu()\\\">Start Game</div>\\r\\n  <div class=\\\"new-game-menu\\\" *ngIf=\\\"showMenuChecker\\\">\\r\\n    <span class=\\\"new-game-menu-label\\\">Select Mode</span>\\r\\n    <div class=\\\"start-button new-game-button\\\" (click)=\\\"newGame(mode)\\\" *ngFor=\\\"let mode of getKeys(all_modes)\\\">{{all_modes[mode]}}</div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/WEBproject/ngx-snake/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { BestScoreManager } from './app.storage.service';\r\nimport { CONTROLS, COLORS, BOARD_SIZE, GAME_MODES } from './app.constants';\r\n\r\n@Component({\r\n  selector: 'ngx-snake',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n  host: {\r\n    '(document:keydown)': 'handleKeyboardEvents($event)'\r\n  }\r\n})\r\nexport class AppComponent {\r\n  private interval: number;\r\n  private tempDirection: number;\r\n  private default_mode = 'classic';\r\n  private isGameOver = false;\r\n\r\n  public all_modes = GAME_MODES;\r\n  public getKeys = Object.keys;\r\n  public board = [];\r\n  public obstacles = [];\r\n  public score = 0;\r\n  public showMenuChecker = false;\r\n  public gameStarted = false;\r\n  public newBestScore = false;\r\n  public best_score = this.bestScoreService.retrieve();\r\n\r\n  private snake = {\r\n    direction: CONTROLS.LEFT,\r\n    parts: [\r\n      {\r\n        x: -1,\r\n        y: -1\r\n      }\r\n    ]\r\n  };\r\n\r\n  private fruit = {\r\n    x: -1,\r\n    y: -1\r\n  };\r\n\r\n  constructor(\r\n    private bestScoreService: BestScoreManager\r\n  ) {\r\n    this.setBoard();\r\n  }\r\n\r\n  handleKeyboardEvents(e: KeyboardEvent) {\r\n    if (e.keyCode === CONTROLS.LEFT && this.snake.direction !== CONTROLS.RIGHT) {\r\n      this.tempDirection = CONTROLS.LEFT;\r\n    } else if (e.keyCode === CONTROLS.UP && this.snake.direction !== CONTROLS.DOWN) {\r\n      this.tempDirection = CONTROLS.UP;\r\n    } else if (e.keyCode === CONTROLS.RIGHT && this.snake.direction !== CONTROLS.LEFT) {\r\n      this.tempDirection = CONTROLS.RIGHT;\r\n    } else if (e.keyCode === CONTROLS.DOWN && this.snake.direction !== CONTROLS.UP) {\r\n      this.tempDirection = CONTROLS.DOWN;\r\n    }\r\n  }\r\n\r\n  setColors(col: number, row: number): string {\r\n    if (this.isGameOver) {\r\n      return COLORS.GAME_OVER;\r\n    } else if (this.fruit.x === row && this.fruit.y === col) {\r\n      return COLORS.FRUIT;\r\n    } else if (this.snake.parts[0].x === row && this.snake.parts[0].y === col) {\r\n      return COLORS.HEAD;\r\n    } else if (this.board[col][row] === true) {\r\n      return COLORS.BODY;\r\n    } else if (this.default_mode === 'obstacles' && this.checkObstacles(row, col)) {\r\n      return COLORS.OBSTACLE;\r\n    }\r\n\r\n    return COLORS.BOARD;\r\n  };\r\n\r\n  updatePositions(): void {\r\n    let newHead = this.repositionHead();\r\n    let me = this;\r\n\r\n    if (this.default_mode === 'classic' && this.boardCollision(newHead)) {\r\n      return this.gameOver();\r\n    } else if (this.default_mode === 'no_walls') {\r\n      this.noWallsTransition(newHead);\r\n    } else if (this.default_mode === 'obstacles') {\r\n      this.noWallsTransition(newHead);\r\n      if (this.obstacleCollision(newHead)) {\r\n        return this.gameOver();\r\n      }\r\n    }\r\n\r\n    if (this.selfCollision(newHead)) {\r\n      return this.gameOver();\r\n    } else if (this.fruitCollision(newHead)) {\r\n      this.eatFruit();\r\n    }\r\n\r\n    let oldTail = this.snake.parts.pop();\r\n    this.board[oldTail.y][oldTail.x] = false;\r\n\r\n    this.snake.parts.unshift(newHead);\r\n    this.board[newHead.y][newHead.x] = true;\r\n\r\n    this.snake.direction = this.tempDirection;\r\n\r\n    setTimeout(() => {\r\n      me.updatePositions();\r\n    }, this.interval);\r\n  }\r\n\r\n  repositionHead(): any {\r\n    let newHead = Object.assign({}, this.snake.parts[0]);\r\n\r\n    if (this.tempDirection === CONTROLS.LEFT) {\r\n      newHead.x -= 1;\r\n    } else if (this.tempDirection === CONTROLS.RIGHT) {\r\n      newHead.x += 1;\r\n    } else if (this.tempDirection === CONTROLS.UP) {\r\n      newHead.y -= 1;\r\n    } else if (this.tempDirection === CONTROLS.DOWN) {\r\n      newHead.y += 1;\r\n    }\r\n\r\n    return newHead;\r\n  }\r\n\r\n  noWallsTransition(part: any): void {\r\n    if (part.x === BOARD_SIZE) {\r\n      part.x = 0;\r\n    } else if (part.x === -1) {\r\n      part.x = BOARD_SIZE - 1;\r\n    }\r\n\r\n    if (part.y === BOARD_SIZE) {\r\n      part.y = 0;\r\n    } else if (part.y === -1) {\r\n      part.y = BOARD_SIZE - 1;\r\n    }\r\n  }\r\n\r\n  addObstacles(): void {\r\n    let x = this.randomNumber();\r\n    let y = this.randomNumber();\r\n\r\n    if (this.board[y][x] === true || y === 8) {\r\n      return this.addObstacles();\r\n    }\r\n\r\n    this.obstacles.push({\r\n      x: x,\r\n      y: y\r\n    });\r\n  }\r\n\r\n  checkObstacles(x, y): boolean {\r\n    let res = false;\r\n\r\n    this.obstacles.forEach((val) => {\r\n      if (val.x === x && val.y === y) {\r\n        res = true;\r\n      }\r\n    });\r\n\r\n    return res;\r\n  }\r\n\r\n  obstacleCollision(part: any): boolean {\r\n    return this.checkObstacles(part.x, part.y);\r\n  }\r\n\r\n  boardCollision(part: any): boolean {\r\n    return part.x === BOARD_SIZE || part.x === -1 || part.y === BOARD_SIZE || part.y === -1;\r\n  }\r\n\r\n  selfCollision(part: any): boolean {\r\n    return this.board[part.y][part.x] === true;\r\n  }\r\n\r\n  fruitCollision(part: any): boolean {\r\n    return part.x === this.fruit.x && part.y === this.fruit.y;\r\n  }\r\n\r\n  resetFruit(): void {\r\n    let x = this.randomNumber();\r\n    let y = this.randomNumber();\r\n\r\n    if (this.board[y][x] === true || this.checkObstacles(x, y)) {\r\n      return this.resetFruit();\r\n    }\r\n\r\n    this.fruit = {\r\n      x: x,\r\n      y: y\r\n    };\r\n  }\r\n\r\n  eatFruit(): void {\r\n    this.score++;\r\n\r\n    let tail = Object.assign({}, this.snake.parts[this.snake.parts.length - 1]);\r\n\r\n    this.snake.parts.push(tail);\r\n    this.resetFruit();\r\n\r\n    if (this.score % 5 === 0) {\r\n      this.interval -= 15;\r\n    }\r\n  }\r\n\r\n  gameOver(): void {\r\n    this.isGameOver = true;\r\n    this.gameStarted = false;\r\n    let me = this;\r\n\r\n    if (this.score > this.best_score) {\r\n      this.bestScoreService.store(this.score);\r\n      this.best_score = this.score;\r\n      this.newBestScore = true;\r\n    }\r\n\r\n    setTimeout(() => {\r\n      me.isGameOver = false;\r\n    }, 500);\r\n\r\n    this.setBoard();\r\n  }\r\n\r\n  randomNumber(): any {\r\n    return Math.floor(Math.random() * BOARD_SIZE);\r\n  }\r\n\r\n  setBoard(): void {\r\n    this.board = [];\r\n\r\n    for (let i = 0; i < BOARD_SIZE; i++) {\r\n      this.board[i] = [];\r\n      for (let j = 0; j < BOARD_SIZE; j++) {\r\n        this.board[i][j] = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  showMenu(): void {\r\n    this.showMenuChecker = !this.showMenuChecker;\r\n  }\r\n\r\n  newGame(mode: string): void {\r\n    this.default_mode = mode || 'classic';\r\n    this.showMenuChecker = false;\r\n    this.newBestScore = false;\r\n    this.gameStarted = true;\r\n    this.score = 0;\r\n    this.tempDirection = CONTROLS.LEFT;\r\n    this.isGameOver = false;\r\n    this.interval = 150;\r\n    this.snake = {\r\n      direction: CONTROLS.LEFT,\r\n      parts: []\r\n    };\r\n\r\n    for (let i = 0; i < 3; i++) {\r\n      this.snake.parts.push({ x: 8 + i, y: 8 });\r\n    }\r\n\r\n    if (mode === 'obstacles') {\r\n      this.obstacles = [];\r\n      let j = 1;\r\n      do {\r\n        this.addObstacles();\r\n      } while (j++ < 9);\r\n    }\r\n\r\n    this.resetFruit();\r\n    this.updatePositions();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/WEBproject/ngx-snake/src/app/app.component.ts","export const BOARD_SIZE = 18;\r\n\r\nexport const CONTROLS = {\r\n  LEFT: 37,\r\n  UP: 38,\r\n  RIGHT: 39,\r\n  DOWN: 40\r\n};\r\n\r\nexport const COLORS = {\r\n  GAME_OVER: '#D24D57',\r\n  FRUIT: '#EC644B',\r\n  HEAD: '#336E7B',\r\n  BODY: '#C8F7C5',\r\n  BOARD: '#86B5BD',\r\n  OBSTACLE: '#383522'\r\n};\r\n\r\nexport const GAME_MODES = {\r\n  classic: 'Classic',\r\n  no_walls: 'No Walls',\r\n  obstacles: 'Obstacles'\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// E:/WEBproject/ngx-snake/src/app/app.constants.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { BestScoreManager } from './app.storage.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule\r\n  ],\r\n  providers: [\r\n    BestScoreManager\r\n  ],\r\n  bootstrap: [\r\n    AppComponent\r\n  ]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// E:/WEBproject/ngx-snake/src/app/app.module.ts","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class BestScoreManager {\r\n\r\n  private ngxSnake = 'ngx_snake';\r\n\r\n  public store(score: number) {\r\n    localStorage.setItem(this.ngxSnake, JSON.stringify({ 'best_score': score }));\r\n  }\r\n\r\n  public retrieve() {\r\n    let storage = this.parse();\r\n    if (!storage) {\r\n      this.store(0);\r\n      storage = this.parse();\r\n    }\r\n\r\n    return storage.best_score;\r\n  }\r\n\r\n  private parse() {\r\n    return JSON.parse(localStorage.getItem(this.ngxSnake));\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/WEBproject/ngx-snake/src/app/app.storage.service.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { AppModule } from './app/app.module';\r\n\r\nenableProdMode();\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// E:/WEBproject/ngx-snake/src/main.ts"],"sourceRoot":"webpack:///"}